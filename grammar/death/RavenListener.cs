//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Raven.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RavenParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IRavenListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] RavenParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] RavenParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] RavenParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] RavenParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.functionDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDef([NotNull] RavenParser.FunctionDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.functionDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDef([NotNull] RavenParser.FunctionDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.variableDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDef([NotNull] RavenParser.VariableDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.variableDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDef([NotNull] RavenParser.VariableDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportStatement([NotNull] RavenParser.ImportStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportStatement([NotNull] RavenParser.ImportStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeHint([NotNull] RavenParser.TypeHintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeHint([NotNull] RavenParser.TypeHintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.abbreviation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbbreviation([NotNull] RavenParser.AbbreviationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.abbreviation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbbreviation([NotNull] RavenParser.AbbreviationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.abbreviationDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbbreviationDef([NotNull] RavenParser.AbbreviationDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.abbreviationDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbbreviationDef([NotNull] RavenParser.AbbreviationDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.abbreviationUsage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbbreviationUsage([NotNull] RavenParser.AbbreviationUsageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.abbreviationUsage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbbreviationUsage([NotNull] RavenParser.AbbreviationUsageContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.asyncFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsyncFunction([NotNull] RavenParser.AsyncFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.asyncFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsyncFunction([NotNull] RavenParser.AsyncFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] RavenParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] RavenParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.errorHandling"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrorHandling([NotNull] RavenParser.ErrorHandlingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.errorHandling"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrorHandling([NotNull] RavenParser.ErrorHandlingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.onReady"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnReady([NotNull] RavenParser.OnReadyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.onReady"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnReady([NotNull] RavenParser.OnReadyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] RavenParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] RavenParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] RavenParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] RavenParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.binaryOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryOp([NotNull] RavenParser.BinaryOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.binaryOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryOp([NotNull] RavenParser.BinaryOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RavenParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] RavenParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RavenParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] RavenParser.IdentifierContext context);
}
