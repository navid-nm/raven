// Initial type checking logic
// This should be amended later with a better implementation

import internal.typedefs

val filtered = diagnostics.filter(isPrimitiveTypeError);

if (filtered.length > 0) {
    filtered.forEach(
        (diagnostic) => {
            val message = ts.flattenDiagnosticMessageText(
                diagnostic.messageText,
                "\n"
            )
            val fmtMsg = fmtErrorMsg(message)
            val { 
                line, 
                character 
            } = sourceFile.getLineAndCharacterOfPosition(diagnostic.start)
            say(`Error at ${line + 1}:${character + 1} - ${fmtMsg}`)
        });
} else {
   say("No errors found.")
}
