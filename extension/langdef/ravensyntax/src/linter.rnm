use vscode

val { execSync } = use("child_process");

class RavenLinter {
   init() {
      my.diagnostics = vscode.languages.createDiagnosticCollection("raven");
   }

   lintDocument(document) {
      if (document.languageId != "raven") {
         return;
      }

      let diagnostics = [];

      try {
         // Use `which` command for Unix-based systems or `where` for Windows
         val command = process.platform == "win32" ? "where raven" : "which raven";
         execSync(
            command, {
               stdio: "ignore" 
            }
         );
      } die (error) {
         if (error.message.includes("Raven is not recognized")) {
            val diagnostic = new vscode.Diagnostic(
               new vscode.Range(0, 0, 0, 0),
               "Raven is not installed. Run 'npm install -g ravenlang'.",
               vscode.DiagnosticSeverity.Error
            );
            diagnostic.code = "RAVEN_NOT_INSTALLED";
            diagnostics.push(diagnostic);
         } else {
            val diagnostic = new vscode.Diagnostic(
               new vscode.Range(0, 0, 0, 0),
               `Transpilation error: ${error.message}`,
               vscode.DiagnosticSeverity.Error
            );
            diagnostics.push(diagnostic);
         }
      }

      my.diagnostics.set(
         document.uri, 
         diagnostics
      );
   }

   dispose() {
      my.diagnostics.dispose();
   }
}

expose RavenLinter;
